steps:
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  id: setup_ssh
  entrypoint: bash
  secretEnv: ["SSH_KEY"]
  args:
  - -c
  - |
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
  volumes:
  - name: "ssh"
    path: /root/.ssh

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  id: download_cache
  entrypoint: bash
  dir: gcloud/preload_instruments
  args:
  - -c
  - |
    if [[ ${_USE_CACHED} == 1 ]]
    then 
      echo "_USE_CACHED is set, loading previously loaded cache file from GCS"
      gsutil cp gs://crypto-arb-resources/artifacts/spreads-arb/cache.tar.gz cache.tar.gz 
      tar xzf cache.tar.gz cache
      ls -ltr
    fi
  volumes:
  - name: "ssh"
    path: /root/.ssh

- name: python:3.9
  id: run_main
  entrypoint: bash
  dir: gcloud/preload_instruments
  args:
  - -c
  - |
    pip install git+ssh://git@github.com/senderr/crypto-mart.git
    python3 main.py
  volumes:
  - name: "ssh"
    path: /root/.ssh

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  id: upload_cache
  entrypoint: bash
  dir: gcloud/preload_instruments
  args:
  - -c
  - |
    tar czf cache.tar.gz cache
    gsutil cp cache.tar.gz gs://crypto-arb-resources/artifacts/spreads-arb/
  volumes:
  - name: "ssh"
    path: /root/.ssh

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/github-ssh-pkey/versions/latest
    env: "SSH_KEY"

timeout: 2400s
substitutions:
    _USE_CACHED: "0"